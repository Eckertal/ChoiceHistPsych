# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + block_type_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl=list(maxfun=2e5)))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response_z ~ (1|sbj_id) + target_z + coherence_z + block_type_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
patsy
patsy_aud
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl=list(maxfun=2e5)))
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + block_type_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl=list(maxfun=2e5)))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response_z ~ (1|sbj_id) + target_z + coherence_z + block_type_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + block_type_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + block_type_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl=list(maxfun=2e5)))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
summary(model1_aud)
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|block_type_z:sbj_id) + cue_z * (1|PPS_z:sbj_id) + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
summary(model1_vis)
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block_type_z:sbj_id) + cue_z * (1|PPS_z:sbj_id) + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl=list(maxfun=2e5)))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|block_type_z:sbj_id) + cue_z * (1|PPS_z:sbj_id) + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|block_type_z:sbj_id) + cue_z * (1|PPS_z:sbj_id) + stim_1_z + resp_1_z * (1|PPS_z:sbj_id) * block_type_z'
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block_type_z:sbj_id) + cue_z * (1|PPS_z:sbj_id) + stim_1_z + resp_1_z * (1|PPS_z:sbj_id) * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl=list(maxfun=2e5)))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|block_type_z:sbj_id) + cue_z * (1|PPS_z:sbj_id) + stim_1_z + resp_1_z * (1|PPS_z:sbj_id) * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
summary(model1_aud)
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block_type_z:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block_type_z:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl=list(maxfun=2e5)))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|block_type_z:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
data_aud
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl=list(maxfun=2e5)))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|block:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='bobyqa', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='Nelder_Mead', optCtrl=list(maxfun=2e5)))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|block:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='Nelder_Mead', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
data_vis.columns
data_vis
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|Block:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='Nelder_Mead', optCtrl = list(maxfun=2e5)))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
install.packages(optimx)
install.packages('optimx')
library(optimx)
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
library(optimx)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl=list(method='nlminb')))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|Block:sbj_id) + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl = list(method='nlminb')))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
View(data_vis)
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
library(optimx)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl=list(method='nlminb')))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|PPS_z:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl = list(method='nlminb')))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
library(optimx)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl=list(method='nlminb')))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|Block:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl = list(method='nlminb')))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
library(optimx)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Dropbox//PhD//CODE//data_preprocessed//1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Dropbox//PhD//RDK//all_data//model1_visual_final.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z + cue_z*resp_1_z*PPS_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl=list(method='nlminb')))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|Block:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z + cue_z*resp_1_z*PPS_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl = list(method='nlminb')))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
library(optimx)
getcwd()
getwd()
library(here)
install.packages(here)
?here
install.pacakges(here)
getwd()
install.packages(rstudioapi)
install.packages(rstudioapi)
library("here")
install.packages("here")
library(here)
here()
setwd("C://Users//annae//Desktop//ChoiceHistory_Psych")
getwd()
# import lme4 module for mixed models
library(lme4)
library(emmeans)
library(MuMIn)
library(optimx)
# read data - auditory
data_aud <- read.csv("C://Users//annae//Desktop//ChoiceHistory_Psych//Data//Exp1_auditory//exp1_model1_auditory.csv")
# read data - visual
data_vis <- read.csv("C://Users//annae//Desktop//ChoiceHistory_Psych//Data//Exp2_visual//exp2_model1_visual.csv")
# set up model on auditory data...
# patsy auditory
patsy_aud <- 'response ~ (1|sbj_id) + target_z + stimulus_z + (1|block:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z + cue_z*resp_1_z*PPS_z'
# patsy for auditory neutral blocks only
#patsy_aud <- 'response_z ~ (1|sbj_id) + target_z + stimulus_z + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z'
model1_aud <- glmer(patsy_aud, data=data_aud,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl=list(method='nlminb')))
# save model in summary text file for later manip. in python
sink('model_1_auditory_Z.txt')
print(summary(model1_aud))
sink()
# set up model on visual data...
# patsy visual
patsy_vis <- 'response ~ (1|sbj_id) + target_z + coherence_z + (1|Block:sbj_id) + cue_z * PPS_z + stim_1_z + resp_1_z * PPS_z * block_type_z + cue_z*resp_1_z*PPS_z'
# patsy visual, neutral blocks only
#patsy_vis <- 'response ~ (1|sbj_id) + target + coherence + cue * PPS_z + stim_1 + resp_1 * PPS_z'
model1_vis <- glmer(patsy_vis, data=data_vis,
family=binomial('logit'),
control=glmerControl(optimizer='optimx', optCtrl = list(method='nlminb')))
# save model summary in text file
sink('model_1_visual_Z.txt')
print(summary(model1_vis))
sink()
r.squaredGLMM(model1_aud)
r.squaredGLMM(model1_vis)
